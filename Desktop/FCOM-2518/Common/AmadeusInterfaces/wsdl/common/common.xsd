<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2006 sp2 U (http://www.altova.com) by Amadeus s.a.s. (Amadeus s.a.s.) -->
<!-- edited with XML Spy v4.1 U (http://www.xmlspy.com) by AMADEUS SAS (AMADEUS SAS) -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xsd:complexType name="GLOBAL_LIST_Type">
		<xsd:annotation>
			<xsd:documentation>Global Lists.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="NAME" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Global list name.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="LIST_ELEMENT" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>List of elements</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="CODE" type="xsd:string"/>
						<xsd:element name="LIST_VALUE" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:simpleContent>
									<xsd:extension base="xsd:string">
										<xsd:attribute name="null" type="xsd:boolean" use="optional" default="false"/>
									</xsd:extension>
								</xsd:simpleContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>String type for value without CDATA</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string"/>
	</xsd:simpleType>
	<!-- CLA CR 1346210-->
	<xsd:element name="LIST_PROPOSE_FARE_DISCOUNT">
		<xsd:annotation>
			<xsd:documentation>Fare discounts to be offered to the user</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="DISCOUNT_CODE"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DISCOUNT_CODE" type="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>The discount code identifying the Central System discount.. Value can be one of the following:
	For FAMILIA_NUMEROSA
	F1=member of a large family of 3 to 5 children.
	F2=member of a large family of more than 5 children.
	For SPANISH_RESIDENT
	RC=Canary resident,flying between Canary Islands and Spain/Balearic islands. 
	DC=Canary resident, flying within Canary islands.
	BP=Balearic island resident, flying between Balearic islands and Spain/Balearic islands
	BI=Balearic island resident, flying within Balearic islands
	RM=Melilla resident, flying between Melilla and Spain/Canary/Balearic islands
							</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<!-- END OF CLA CR 1346210-->
	<xsd:element name="LIST_FIELD_ERROR" type="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>List of fields that should be corrected.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="LIST_MSG">
		<xsd:annotation>
			<xsd:documentation>A list of potential errors.  </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="TYPE">
					<xsd:annotation>
						<xsd:documentation>Error level. The value can be F(Fatal), E(Error), W(Warning), I(Info), N(No type), C(warning Critical) or O(cOnfirmation). </xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="unprotectedStringType">
							<xsd:enumeration value="F"/>
							<xsd:enumeration value="E"/>
							<xsd:enumeration value="W"/>
							<xsd:enumeration value="I"/>
							<xsd:enumeration value="N"/>
							<xsd:enumeration value="C"/>
							<xsd:enumeration value="O"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="NUMBER" type="xsd:integer">
					<xsd:annotation>
						<xsd:documentation>Error code.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="TEXT" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Error/warning message text.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="SUBERROR" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="NUMBER" type="xsd:integer">
								<xsd:annotation>
									<xsd:documentation>Sub-Error code.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="TYPE" type="xsd:integer">
								<xsd:annotation>
									<xsd:documentation>Sub-Error type. 0: Internal Error; 1: API Error</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="TEXT" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Sub-Error message text.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DIRECT_LOGIN" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Mandatory for direct login functionality activation. Only "YES" is accepted as value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DIRECT_LOGIN_AGENT" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Mandatory for direct login agent functionality activation. Only "YES" is accepted as value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EXTERNAL_LOGIN" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Mandatory for external login functionality activation. Only "RETRIEVE" and "LOGIN_AND_RETRIEVE" are accepted as value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EXTERNAL_DIRECT_LOGIN" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Mandatory for external login functionality activation (meaning if the user should also be logged into Planitgo). Only "YES" is accepted as value.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="IS_STRUCTURED_XML" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Flag specifying structured XML data ("YES" for structured data).</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="OFFICE_ID" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Office ID override. If present, this office ID will be used, and not one from site context. </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TRIP_REASON">
		<xsd:annotation>
			<xsd:documentation>A trip reason defined in the Community</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="CODE" type="unprotectedStringType">
					<xsd:annotation>
						<xsd:documentation>A trip reason code is unique within a Community</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="NAME" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>A trip reason name defined for each language within the Community</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TRIP_REASON_CODE" type="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>Trip reason selected by the traveller to process availability</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BOOL_IS_OUT_OF_POLICY" type="xsd:boolean">
		<xsd:annotation>
			<xsd:documentation>False or empty tag if rules compliant, true if out of rules</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DISPLAY_RANK" type="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>Display rank associated to the provider. </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PAGE_TICKET" type="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>The needed context handle used to retrieve the data that will define the inputs. </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="LIST_TRIP_REASONtype">
		<xsd:sequence>
			<xsd:element name="CODE" type="unprotectedStringType">
				<xsd:annotation>
					<xsd:documentation>A trip reason code is unique within a Community</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NAME" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>A trip reason name defined for each language within the Community</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="LIST_TRIP_REASON" type="LIST_TRIP_REASONtype">
		<xsd:annotation>
			<xsd:documentation>Trip reason list defined in a Community</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="TRAVEL_APPROVER_1">
		<xsd:annotation>
			<xsd:documentation>This section contains Travel Approver details that been associated to the trip.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="COMMUNITY_ID" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Community ID of the Travel Approver</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="USER_ID" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>User ID of the Travel Approver</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ACTION" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Action of Travel Approver. It can be APPROVE, REJECT, ACTION_REASSIGN or ACTION_REJECT_CANCEL</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="TXT_REMARK" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Remarks that travel approver did on the trip</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="LAST_NAME" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Last name of Travel Approver</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="FIRST_NAME" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Last name of Travel Approver</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="LIST_EMAIL" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>List of string that contains emails addresses</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:group name="CommonInputGroup">
		<xsd:annotation>
			<xsd:documentation>Any data that could appear in all inputs</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="LIST_EXTERNAL_ID" type="xsd:string" minOccurs="0" maxOccurs="11">
				<xsd:annotation>
					<xsd:documentation>Ordered list of external IDs. External IDs are customer defined parameters. If the site is configured to use external ids, they must be sent to the booking engine during the first request. Then these ids can be sent with any other request input and are received back in all subsequent responses. Typically, they can be sent during a direct login request and received back from the booking engine during data transfer. These parameters are often used by the external application to synchronize the flow between the client application and the booking engine.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="FROM_PAGE" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Sender page code. Booking engine can use this code to send back the client to the page he came from in case of failure.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="REQUEST_INFO" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Tag containing request info</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="IP_ADDRESSES" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>List of ip addresses</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="IS_SSL_REQUEST" type="xsd:boolean" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Flag that indicates if user request is performed over SSL</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="CLIENT_REFERRER" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Flag that indicates if user request is performed over SSL</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CLEAN_OVERRIDE_ON_SITE_SWITCH" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Flag indicating if an overriden parameters should be clean if supplied site code does not match the current overriden one,false if not present</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:group>
	<xsd:group name="CommonOutputGroup">
		<xsd:annotation>
			<xsd:documentation>Any data that could appear in all outputs</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="LIST_EXTERNAL_ID" minOccurs="0" maxOccurs="11">
				<xsd:annotation>
					<xsd:documentation>Ordered list of external IDs. External IDs are customer defined parameters. If the site is configured to use external ids, they must be sent to the booking engine during the first request. Then these ids can be sent with any other request input and are received back in all subsequent responses. Typically, they can be sent during a direct login request and received back from the booking engine during data transfer. These parameters are often used by the external application to synchronize the flow between the client application and the booking engine.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="FROM_PAGE" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Sender page code. Booking engine can use this code to send back the client to the page he came from in case of failure.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:group>
	<xsd:complexType name="currencyType">
		<xsd:annotation>
			<xsd:documentation>Currency type</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="CODE" type="unprotectedStringType">
				<xsd:annotation>
					<xsd:documentation>Currency code  </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NAME" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Currency name  </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="decodedCurrencyType">
		<xsd:sequence>
			<xsd:element name="CODE" type="unprotectedStringType">
				<xsd:annotation>
					<xsd:documentation>The currency code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NAME" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>The name of the decoded currency.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="corporateNumberType">
		<xsd:annotation>
			<xsd:documentation>The syntax of a GDS corporate number (2 to 8 characters) to target a specific corporate fare for faring (informative) or pricing (with a booking). For Amadeus GDS, a 6-digit string (e.g. "012345"); for Sabre/Galileo GDS, code can be 2 to 8 letters, or a mix of letters and digits; specifically, Sabre corporate codes ("SNAP codes") are usually built with 3 letters + 2 digits (e.g. "ABC01"). WARNING: type is case-sensitive, with capital letters allowed only; no space.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="unprotectedStringType">
			<xsd:minLength value="2"/>
			<xsd:maxLength value="8"/>
			<xsd:pattern value="[A-Z0-9]+"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="GENERIC_ELIBILITY">
		<xsd:annotation>
			<xsd:documentation>generic eligibility permission</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="IS_ELIGIBLE" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value is true if it is eligible</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NON_ELIGIBILITY_REASON" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Reason of non egibility</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="RELATIONSHIP" type="unprotectedStringType">
		<xsd:annotation>
			<xsd:documentation>Relationship (i.e. spouse, child etc) with primary ptraveller. Valid codes are specified by profile.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
</xsd:schema>